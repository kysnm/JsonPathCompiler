plugins {
    id "com.jfrog.bintray" version "1.7"
    id "maven-publish"
    id "java"
    id "jacoco"
    // id "findbugs"
    id "idea"
}

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    provided
}

ext {
    snapshotVersion = true
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'net.minidev:json-smart:2.2.1'
    compile 'org.apache.commons:commons-lang3:3.4'

    testCompile 'junit:junit:4.+'
    testCompile 'org.assertj:assertj-core:2.1.0'
    testCompile 'org.slf4j:slf4j-simple:1.7.21'
}

allprojects {
    ext.displayName = null
    ext.buildTimestamp = new Date().format('yyyy-MM-dd HH:mm:ss')

    group = 'com.github.kysnm'
    version = '0.0.1' + (snapshotVersion ? "-SNAPSHOT" : "")

    if (JavaVersion.current().isJava8Compatible()) {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }


    task sourcesJar(type: Jar, dependsOn:classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn:javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    javadoc {
        options.locale = 'en_US'
    }

    artifacts {
        archives jar
        archives sourcesJar
        archives javadocJar
    }

    publishing {
        publications {
            MyPublication(MavenPublication) {
                from components.java
                groupId 'com.github.kysnm'
                artifactId 'JsonPathCompiler'
            }
        }
    }

    bintray {
        user = project.hasProperty('bintray_user') ? bintray_user : ''
        key = project.hasProperty('bintray_apikey') ? bintray_apikey : ''

        pkg {
            repo = 'maven'
            licenses = ['Apache-2.0']
            websiteUrl = 'https://github.com/kysnm/JsonPathCompiler'
            issueTrackerUrl = 'https://github.com/kysnm/JsonPathCompiler/issues'
            vcsUrl = 'https://github.com/kysnm/JsonPathCompiler.git'
            githubRepo = 'kysnm/JsonPathCompiler'
            version {
                name = project.version
                released = new Date()
                gpg {
                    sign = true
                    passphrase = project.hasProperty('bintray_gpg_password') ? bintray_gpg_password : ''
                }
            }
        }
        publications = ['mavenPublication']
        configurations = ['archives']

        dryRun = true
    }
}

task classpath(type: Copy, dependsOn: ["jar"]) {
    doFirst { file("classpath").deleteDir() }
    from (configurations.provided + files(jar.archivePath))
    into "classpath"
}
clean { delete "classpath" }
